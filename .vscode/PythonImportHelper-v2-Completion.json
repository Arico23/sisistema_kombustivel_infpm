[
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "template",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "django.http",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.http",
        "description": "django.http",
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "ModelForm",
        "importPath": "django.forms",
        "description": "django.forms",
        "isExtraImport": true,
        "detail": "django.forms",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "django.forms",
        "description": "django.forms",
        "isExtraImport": true,
        "detail": "django.forms",
        "documentation": {}
    },
    {
        "label": "CreateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "pprint",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pprint",
        "description": "pprint",
        "detail": "pprint",
        "documentation": {}
    },
    {
        "label": "pprint",
        "importPath": "pprint",
        "description": "pprint",
        "isExtraImport": true,
        "detail": "pprint",
        "documentation": {}
    },
    {
        "label": "pprint",
        "importPath": "pprint",
        "description": "pprint",
        "isExtraImport": true,
        "detail": "pprint",
        "documentation": {}
    },
    {
        "label": "FormHelper",
        "importPath": "crispy_forms.helper",
        "description": "crispy_forms.helper",
        "isExtraImport": true,
        "detail": "crispy_forms.helper",
        "documentation": {}
    },
    {
        "label": "Layout",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Submit",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Row",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Button",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "HTML",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "stockMonth",
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "isExtraImport": true,
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "total_transportes",
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "isExtraImport": true,
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "sweetify",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sweetify",
        "description": "sweetify",
        "detail": "sweetify",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "relativedelta",
        "importPath": "dateutil.relativedelta",
        "description": "dateutil.relativedelta",
        "isExtraImport": true,
        "detail": "dateutil.relativedelta",
        "documentation": {}
    },
    {
        "label": "ExtractYear",
        "importPath": "django.db.models.functions",
        "description": "django.db.models.functions",
        "isExtraImport": true,
        "detail": "django.db.models.functions",
        "documentation": {}
    },
    {
        "label": "ExtractMonth",
        "importPath": "django.db.models.functions",
        "description": "django.db.models.functions",
        "isExtraImport": true,
        "detail": "django.db.models.functions",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "admKombustivel.migrations.0001_initial",
        "description": "admKombustivel.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Departamentu',\n            fields=[\n                ('id_departamentu', models.AutoField(editable=False, primary_key=True, serialize=False)),\n                ('naran_departamentu', models.CharField(max_length=200)),",
        "detail": "admKombustivel.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "admKombustivel.migrations.0002_distribuisaun_kilometrajen",
        "description": "admKombustivel.migrations.0002_distribuisaun_kilometrajen",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('admKombustivel', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='distribuisaun',\n            name='kilometrajen',\n            field=models.CharField(default=0, max_length=200),\n        ),",
        "detail": "admKombustivel.migrations.0002_distribuisaun_kilometrajen",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "admKombustivel.migrations.0003_alter_fulan_id_fulan",
        "description": "admKombustivel.migrations.0003_alter_fulan_id_fulan",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('admKombustivel', '0002_distribuisaun_kilometrajen'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='fulan',\n            name='id_fulan',\n            field=models.AutoField(editable=False, primary_key=True, serialize=False),\n        ),",
        "detail": "admKombustivel.migrations.0003_alter_fulan_id_fulan",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "admKombustivel.migrations.0004_senhas_status",
        "description": "admKombustivel.migrations.0004_senhas_status",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('admKombustivel', '0003_alter_fulan_id_fulan'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='senhas',\n            name='status',\n            field=models.CharField(choices=[('Seidauk Distribui', 'Seidauk Distribui'), ('Distribui Ona', 'Distribui Ona')], default='Seidauk Distribui', max_length=20),\n        ),",
        "detail": "admKombustivel.migrations.0004_senhas_status",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "admKombustivel.migrations.0005_distribuitorrelatorio",
        "description": "admKombustivel.migrations.0005_distribuitorrelatorio",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('admKombustivel', '0004_senhas_status'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='DistribuitorRelatorio',\n            fields=[\n                ('id_distribuitor', models.AutoField(editable=False, primary_key=True, serialize=False)),\n                ('naran_distribuitor', models.CharField(max_length=200)),",
        "detail": "admKombustivel.migrations.0005_distribuitorrelatorio",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "admKombustivel.migrations.0006_distribuitor_montante_atual_and_more",
        "description": "admKombustivel.migrations.0006_distribuitor_montante_atual_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('admKombustivel', '0005_distribuitorrelatorio'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='distribuitor',\n            name='montante_atual',\n            field=models.FloatField(default=0),\n        ),",
        "detail": "admKombustivel.migrations.0006_distribuitor_montante_atual_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "admKombustivel.migrations.0007_alter_distribuisaun_id_transporte",
        "description": "admKombustivel.migrations.0007_alter_distribuisaun_id_transporte",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('admKombustivel', '0006_distribuitor_montante_atual_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='distribuisaun',\n            name='id_transporte',\n            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='admKombustivel.transporte'),\n        ),",
        "detail": "admKombustivel.migrations.0007_alter_distribuisaun_id_transporte",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "admKombustivel.migrations.0008_alter_distribuisaun_id_transporte",
        "description": "admKombustivel.migrations.0008_alter_distribuisaun_id_transporte",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('admKombustivel', '0007_alter_distribuisaun_id_transporte'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='distribuisaun',\n            name='id_transporte',\n            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='admKombustivel.transporte'),\n        ),",
        "detail": "admKombustivel.migrations.0008_alter_distribuisaun_id_transporte",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "admKombustivel.migrations.0009_alter_distribuisaun_id_transporte",
        "description": "admKombustivel.migrations.0009_alter_distribuisaun_id_transporte",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('admKombustivel', '0008_alter_distribuisaun_id_transporte'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='distribuisaun',\n            name='id_transporte',\n            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admKombustivel.transporte'),\n        ),",
        "detail": "admKombustivel.migrations.0009_alter_distribuisaun_id_transporte",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "admKombustivel.migrations.0010_senhas_id_distributor",
        "description": "admKombustivel.migrations.0010_senhas_id_distributor",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('admKombustivel', '0009_alter_distribuisaun_id_transporte'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='senhas',\n            name='id_distributor',\n            field=models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, to='admKombustivel.distribuitor'),\n            preserve_default=False,",
        "detail": "admKombustivel.migrations.0010_senhas_id_distributor",
        "documentation": {}
    },
    {
        "label": "has_group",
        "kind": 2,
        "importPath": "admKombustivel.templatetags.auth_extras",
        "description": "admKombustivel.templatetags.auth_extras",
        "peekOfCode": "def has_group(user, group_name):\n    return user.groups.filter(name=group_name).exists()",
        "detail": "admKombustivel.templatetags.auth_extras",
        "documentation": {}
    },
    {
        "label": "register",
        "kind": 5,
        "importPath": "admKombustivel.templatetags.auth_extras",
        "description": "admKombustivel.templatetags.auth_extras",
        "peekOfCode": "register = template.Library() \n@register.filter(name='has_group') \ndef has_group(user, group_name):\n    return user.groups.filter(name=group_name).exists()",
        "detail": "admKombustivel.templatetags.auth_extras",
        "documentation": {}
    },
    {
        "label": "admKombustivelAdminUtilizador",
        "kind": 6,
        "importPath": "admKombustivel.admin",
        "description": "admKombustivel.admin",
        "peekOfCode": "class admKombustivelAdminUtilizador(admin.ModelAdmin):\n    list_display = ('id_user','username', 'password', 'level')\n    list_filter = ('username', 'password', 'level')\n    search_fields = ('username', 'password', 'level')\n#registu model ba admin django\nadmin.site.register(Utilizador, admKombustivelAdminUtilizador)\nclass admKombustivelAdminTransporte(admin.ModelAdmin):\n    list_display = ('id_transporte','nu_matricula', 'categoria', 'tipo_transporte')\n    list_filter = ('nu_matricula', 'categoria', 'tipo_transporte')\n    search_fields = ('nu_matricula', 'categoria', 'tipo_transporte')",
        "detail": "admKombustivel.admin",
        "documentation": {}
    },
    {
        "label": "admKombustivelAdminTransporte",
        "kind": 6,
        "importPath": "admKombustivel.admin",
        "description": "admKombustivel.admin",
        "peekOfCode": "class admKombustivelAdminTransporte(admin.ModelAdmin):\n    list_display = ('id_transporte','nu_matricula', 'categoria', 'tipo_transporte')\n    list_filter = ('nu_matricula', 'categoria', 'tipo_transporte')\n    search_fields = ('nu_matricula', 'categoria', 'tipo_transporte')\n#registu model ba admin django\nadmin.site.register(Transporte, admKombustivelAdminTransporte)\nclass admKombustivelAdminMotorista(admin.ModelAdmin):\n    list_display = ('id_motorista','naran_motorista', 'sexo', 'id_departamentu', 'id_diresaun', 'id_regional')\n    list_filter = ('naran_motorista', 'sexo', 'id_departamentu', 'id_diresaun', 'id_regional')\n    search_fields = ('naran_motorista', 'sexo', 'id_departamentu', 'id_diresaun', 'id_regional')",
        "detail": "admKombustivel.admin",
        "documentation": {}
    },
    {
        "label": "admKombustivelAdminMotorista",
        "kind": 6,
        "importPath": "admKombustivel.admin",
        "description": "admKombustivel.admin",
        "peekOfCode": "class admKombustivelAdminMotorista(admin.ModelAdmin):\n    list_display = ('id_motorista','naran_motorista', 'sexo', 'id_departamentu', 'id_diresaun', 'id_regional')\n    list_filter = ('naran_motorista', 'sexo', 'id_departamentu', 'id_diresaun', 'id_regional')\n    search_fields = ('naran_motorista', 'sexo', 'id_departamentu', 'id_diresaun', 'id_regional')\n#registu model ba admin django\nadmin.site.register(Motorista, admKombustivelAdminMotorista)\nclass admKombustivelAdminRegional(admin.ModelAdmin):\n    list_display = ('id_regional','naran_regional')\n    list_filter = ['naran_regional']\n    search_fields = ['naran_regional']",
        "detail": "admKombustivel.admin",
        "documentation": {}
    },
    {
        "label": "admKombustivelAdminRegional",
        "kind": 6,
        "importPath": "admKombustivel.admin",
        "description": "admKombustivel.admin",
        "peekOfCode": "class admKombustivelAdminRegional(admin.ModelAdmin):\n    list_display = ('id_regional','naran_regional')\n    list_filter = ['naran_regional']\n    search_fields = ['naran_regional']\n#registu model ba admin django\nadmin.site.register(Regional, admKombustivelAdminRegional)\nclass admKombustivelAdminDiresaun(admin.ModelAdmin):\n    list_display = ('id_diresaun','naran_diresaun')\n    list_filter = ['naran_diresaun']\n    search_fields = ['naran_diresaun']",
        "detail": "admKombustivel.admin",
        "documentation": {}
    },
    {
        "label": "admKombustivelAdminDiresaun",
        "kind": 6,
        "importPath": "admKombustivel.admin",
        "description": "admKombustivel.admin",
        "peekOfCode": "class admKombustivelAdminDiresaun(admin.ModelAdmin):\n    list_display = ('id_diresaun','naran_diresaun')\n    list_filter = ['naran_diresaun']\n    search_fields = ['naran_diresaun']\n#registu model ba admin django\nadmin.site.register(Diresaun, admKombustivelAdminDiresaun)\nclass admKombustivelAdminTinan(admin.ModelAdmin):\n    list_display = ['ano']\n    list_filter = ['ano']\n    search_fields = ['ano']",
        "detail": "admKombustivel.admin",
        "documentation": {}
    },
    {
        "label": "admKombustivelAdminTinan",
        "kind": 6,
        "importPath": "admKombustivel.admin",
        "description": "admKombustivel.admin",
        "peekOfCode": "class admKombustivelAdminTinan(admin.ModelAdmin):\n    list_display = ['ano']\n    list_filter = ['ano']\n    search_fields = ['ano']\n#registu model ba admin django\nadmin.site.register(Tinan, admKombustivelAdminTinan)\nclass admKombustivelAdminDistribuitor(admin.ModelAdmin):\n    list_display = ('id_distribuitor', 'naran_distribuitor')\n    list_filter = ['naran_distribuitor']\n    search_fields = ['naran_distribuitor']",
        "detail": "admKombustivel.admin",
        "documentation": {}
    },
    {
        "label": "admKombustivelAdminDistribuitor",
        "kind": 6,
        "importPath": "admKombustivel.admin",
        "description": "admKombustivel.admin",
        "peekOfCode": "class admKombustivelAdminDistribuitor(admin.ModelAdmin):\n    list_display = ('id_distribuitor', 'naran_distribuitor')\n    list_filter = ['naran_distribuitor']\n    search_fields = ['naran_distribuitor']\n#registu model ba admin django\nadmin.site.register(Distribuitor, admKombustivelAdminDistribuitor)\nclass admKombustivelAdminFulan(admin.ModelAdmin):\n    list_display = ('id_fulan', 'naran_fulan')\n    list_filter = ['naran_fulan']\n    search_fields = ['naran_fulan']",
        "detail": "admKombustivel.admin",
        "documentation": {}
    },
    {
        "label": "admKombustivelAdminFulan",
        "kind": 6,
        "importPath": "admKombustivel.admin",
        "description": "admKombustivel.admin",
        "peekOfCode": "class admKombustivelAdminFulan(admin.ModelAdmin):\n    list_display = ('id_fulan', 'naran_fulan')\n    list_filter = ['naran_fulan']\n    search_fields = ['naran_fulan']\n#registu model ba admin django\nadmin.site.register(Fulan, admKombustivelAdminFulan)\nclass admKombustivelAdminSenhas(admin.ModelAdmin):\n    list_display = ('id_senhas', 'nu_senhas', 'folin_senhas', 'status')\n    list_filter = ('nu_senhas', 'folin_senhas', 'status')\n    search_fields = ('nu_senhas', 'folin_senhas', 'status')",
        "detail": "admKombustivel.admin",
        "documentation": {}
    },
    {
        "label": "admKombustivelAdminSenhas",
        "kind": 6,
        "importPath": "admKombustivel.admin",
        "description": "admKombustivel.admin",
        "peekOfCode": "class admKombustivelAdminSenhas(admin.ModelAdmin):\n    list_display = ('id_senhas', 'nu_senhas', 'folin_senhas', 'status')\n    list_filter = ('nu_senhas', 'folin_senhas', 'status')\n    search_fields = ('nu_senhas', 'folin_senhas', 'status')\n#registu model ba admin django\nadmin.site.register(Senhas, admKombustivelAdminSenhas)\n# class admKombustivelAdminKombustivel(admin.ModelAdmin):\n#     list_display = ('id_kombustivel', 'tipo_kombustivel', 'id_distribuitor', 'ano', 'folin_kombustivel', 'data')\n#     list_filter = ('tipo_kombustivel', 'id_distribuitor', 'ano', 'folin_kombustivel', 'data')\n#     search_fields = ('tipo_kombustivel', 'id_distribuitor', 'ano', 'folin_kombustivel', 'data')",
        "detail": "admKombustivel.admin",
        "documentation": {}
    },
    {
        "label": "admKombustivelAdminDistribuisaun",
        "kind": 6,
        "importPath": "admKombustivel.admin",
        "description": "admKombustivel.admin",
        "peekOfCode": "class admKombustivelAdminDistribuisaun(admin.ModelAdmin):\n    list_display = ('id_distribuisaun', 'tipo_kombustivel', 'kilometrajen', 'id_transporte', 'id_senhas', 'id_motorista', 'fulan', 'ano', 'destinasaun', 'folin_utilitariu', 'data')\n    list_filter = ('tipo_kombustivel', 'kilometrajen', 'id_transporte', 'id_senhas', 'id_motorista', 'fulan', 'ano', 'destinasaun', 'folin_utilitariu', 'data')\n    search_fields = ('tipo_kombustivel', 'kilometrajen', 'id_transporte', 'id_senhas', 'id_motorista', 'fulan', 'ano', 'destinasaun', 'folin_utilitariu', 'data')\n#registu model ba admin django\nadmin.site.register(Distribuisaun, admKombustivelAdminDistribuisaun)\nclass admKombustivelAdminDepartamentu(admin.ModelAdmin):\n    list_display = ('id_departamentu', 'naran_departamentu')\n    list_filter = ['naran_departamentu']\n    search_fields = ['naran_departamentu']",
        "detail": "admKombustivel.admin",
        "documentation": {}
    },
    {
        "label": "admKombustivelAdminDepartamentu",
        "kind": 6,
        "importPath": "admKombustivel.admin",
        "description": "admKombustivel.admin",
        "peekOfCode": "class admKombustivelAdminDepartamentu(admin.ModelAdmin):\n    list_display = ('id_departamentu', 'naran_departamentu')\n    list_filter = ['naran_departamentu']\n    search_fields = ['naran_departamentu']\n#registu model ba admin django\nadmin.site.register(Departamentu, admKombustivelAdminDepartamentu)",
        "detail": "admKombustivel.admin",
        "documentation": {}
    },
    {
        "label": "AdmkombustivelConfig",
        "kind": 6,
        "importPath": "admKombustivel.apps",
        "description": "admKombustivel.apps",
        "peekOfCode": "class AdmkombustivelConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'admKombustivel'",
        "detail": "admKombustivel.apps",
        "documentation": {}
    },
    {
        "label": "unauthenticated_user",
        "kind": 2,
        "importPath": "admKombustivel.decorators",
        "description": "admKombustivel.decorators",
        "peekOfCode": "def unauthenticated_user(view_func):\n    def wrapper_func(request, *args, **kwargs):\n        if request.user.is_authenticated:\n            return redirect('home')\n        else:\n            return view_func(request, *args, **kwargs)\n    return wrapper_func\ndef allowed_users(allowed_roles=[]):\n    def decorator(view_func):\n        def wrapper_func(request, *args, **kwargs):",
        "detail": "admKombustivel.decorators",
        "documentation": {}
    },
    {
        "label": "allowed_users",
        "kind": 2,
        "importPath": "admKombustivel.decorators",
        "description": "admKombustivel.decorators",
        "peekOfCode": "def allowed_users(allowed_roles=[]):\n    def decorator(view_func):\n        def wrapper_func(request, *args, **kwargs):\n            group = None\n            if request.user.groups.exists():\n                group = request.user.groups.all()[0].name\n            if group in allowed_roles:\n                return view_func(request, *args, **kwargs)\n            else: \n                return HttpResponse('You are not authorized to view this page')",
        "detail": "admKombustivel.decorators",
        "documentation": {}
    },
    {
        "label": "manejarial_only",
        "kind": 2,
        "importPath": "admKombustivel.decorators",
        "description": "admKombustivel.decorators",
        "peekOfCode": "def manejarial_only(view_func):\n    def wrapper_function(request, *args, **kwargs):\n        group = None\n        if request.user.groups.exists():\n            group = request.user.groups.all()[0].name\n        if group == 'manejarial':\n            return view_func(request, *args, **kwargs)\n        else:\n            return HttpResponse(\"<h1 style='color:red'><center>Ita bo'ot laiha autorizasaun asessu asaun ne'e</center></h1>\", status=401)  # or redirect to some other page\n    return wrapper_function",
        "detail": "admKombustivel.decorators",
        "documentation": {}
    },
    {
        "label": "DistributorForm",
        "kind": 6,
        "importPath": "admKombustivel.forms",
        "description": "admKombustivel.forms",
        "peekOfCode": "class DistributorForm(forms.ModelForm):\n    class Meta:\n        model = Distribuitor\n        fields = ['naran_distribuitor', 'montante_distribuitor', 'data', 'ano']\n        labels = {\n             'naran_distribuitor': 'Naran Distributor',\n             'montante_distribuitor': 'Montante Kombustivel',\n             'data': 'Data Simu Kombustivel',\n             'ano': 'Tinan',\n        # fields = ['cutomer'] #only specific form",
        "detail": "admKombustivel.forms",
        "documentation": {}
    },
    {
        "label": "SenhasForm",
        "kind": 6,
        "importPath": "admKombustivel.forms",
        "description": "admKombustivel.forms",
        "peekOfCode": "class SenhasForm(forms.ModelForm):\n    class Meta:\n        model = Senhas\n        fields = ['nu_senhas', 'folin_senhas', 'id_distributor']\n        labels = {\n            'nu_senhas': 'Numeru Senhas',\n            'folin_senhas': 'Folin Senhas',\n            'id_distributor': 'Distributor'\n        }\n        placeholder = {",
        "detail": "admKombustivel.forms",
        "documentation": {}
    },
    {
        "label": "RegionalForm",
        "kind": 6,
        "importPath": "admKombustivel.forms",
        "description": "admKombustivel.forms",
        "peekOfCode": "class RegionalForm(forms.ModelForm):\n    class Meta:\n        model = Regional\n        fields = ['naran_regional']\n        labels = {\n             'naran_regional': 'Naran Regional',\n        # fields = ['cutomer'] #only specific form\n        }\n#formulario Departamentu\nclass DepartamentuForm(forms.ModelForm):",
        "detail": "admKombustivel.forms",
        "documentation": {}
    },
    {
        "label": "DepartamentuForm",
        "kind": 6,
        "importPath": "admKombustivel.forms",
        "description": "admKombustivel.forms",
        "peekOfCode": "class DepartamentuForm(forms.ModelForm):\n    class Meta:\n        model = Departamentu\n        fields = ['naran_departamentu']\n        labels = {\n             'naran_departamentu': 'Naran Departamentu'\n        # fields = ['cutomer'] #only specific form\n        }\n#formulario Diresaun\nclass DiresaunForm(forms.ModelForm):",
        "detail": "admKombustivel.forms",
        "documentation": {}
    },
    {
        "label": "DiresaunForm",
        "kind": 6,
        "importPath": "admKombustivel.forms",
        "description": "admKombustivel.forms",
        "peekOfCode": "class DiresaunForm(forms.ModelForm):\n    class Meta:\n        model = Diresaun\n        fields = ['naran_diresaun']\n        labels = {\n             'naran_diresaun': 'Naran Diresaun',\n        # fields = ['cutomer'] #only specific form\n        }\n#formulario Fulan\nclass FulanForm(forms.ModelForm):",
        "detail": "admKombustivel.forms",
        "documentation": {}
    },
    {
        "label": "FulanForm",
        "kind": 6,
        "importPath": "admKombustivel.forms",
        "description": "admKombustivel.forms",
        "peekOfCode": "class FulanForm(forms.ModelForm):\n    class Meta:\n        model = Fulan\n        fields = ['naran_fulan']\n        labels = {\n             'naran_fulan': 'Fulan',\n        # fields = ['cutomer'] #only specific form\n        }\n#formulario Fulan\nclass TinanForm(forms.ModelForm):",
        "detail": "admKombustivel.forms",
        "documentation": {}
    },
    {
        "label": "TinanForm",
        "kind": 6,
        "importPath": "admKombustivel.forms",
        "description": "admKombustivel.forms",
        "peekOfCode": "class TinanForm(forms.ModelForm):\n    class Meta:\n        model = Tinan\n        fields = ['ano']\n        labels = {\n             'ano': 'Tinan',\n        # fields = ['cutomer'] #only specific form\n        }\n#formulario Motorista\nclass MotoristaForm(forms.ModelForm):",
        "detail": "admKombustivel.forms",
        "documentation": {}
    },
    {
        "label": "MotoristaForm",
        "kind": 6,
        "importPath": "admKombustivel.forms",
        "description": "admKombustivel.forms",
        "peekOfCode": "class MotoristaForm(forms.ModelForm):\n    class Meta:\n        model = Motorista\n        fields = ['naran_motorista', 'sexo', 'id_diresaun', 'id_departamentu', 'id_regional']\n        labels = {\n             'id_diresaun': 'Diresaun',\n             'id_departamentu': 'Departamentu',\n             'id_regional': 'Regional',\n        # fields = ['cutomer'] #only specific form\n        }",
        "detail": "admKombustivel.forms",
        "documentation": {}
    },
    {
        "label": "DistribuisaunForm",
        "kind": 6,
        "importPath": "admKombustivel.forms",
        "description": "admKombustivel.forms",
        "peekOfCode": "class DistribuisaunForm(forms.ModelForm):\n    class Meta:\n        model = Distribuisaun\n        fields = ['tipo_kombustivel', 'kilometrajen', 'id_transporte', 'id_senhas', 'id_motorista','fulan', 'ano', 'destinasaun', 'folin_utilitariu', 'data']\n        labels = {\n             'tipo_kombustivel': 'Tipu Kombustivel',\n             'kilomtrajen': 'Kilometrajen',\n             'id_transporte' : 'Transporte',\n             'id_senhas': 'Folin Senhas',\n             'id_motorista': 'Motorista',",
        "detail": "admKombustivel.forms",
        "documentation": {}
    },
    {
        "label": "TransporteForm",
        "kind": 6,
        "importPath": "admKombustivel.forms",
        "description": "admKombustivel.forms",
        "peekOfCode": "class TransporteForm(forms.ModelForm):\n    class Meta:\n        model = Transporte\n        fields = ['nu_matricula', 'categoria', 'tipo_transporte']\n        labels = {\n             'nu_matrikula': 'Numeru Matrikula Transporte',\n             'categoria' : 'Kategoria Transporte',\n             'tipo_transporte' : 'Modelu Transporte',\n        }\n        # fields = ['cutomer'] #only specific form",
        "detail": "admKombustivel.forms",
        "documentation": {}
    },
    {
        "label": "UserProfileForm",
        "kind": 6,
        "importPath": "admKombustivel.forms",
        "description": "admKombustivel.forms",
        "peekOfCode": "class UserProfileForm(forms.ModelForm):\n    old_password = forms.CharField(label='Password Tuan', widget=forms.PasswordInput())\n    class Meta:\n        model = User\n        fields = ['username', 'password']\n        labels = {\n            'username': 'Username',\n            'password': 'Password Foun'\n        }\n        widgets = {",
        "detail": "admKombustivel.forms",
        "documentation": {}
    },
    {
        "label": "Utilizador",
        "kind": 6,
        "importPath": "admKombustivel.models",
        "description": "admKombustivel.models",
        "peekOfCode": "class Utilizador(models.Model):\n    LEVEL = (\n            ('admin', 'admin'),\n            ('user', 'user'))\n    id_user = models.AutoField(primary_key=True, editable=False)\n    username = models.CharField(max_length=100)\n    password = models.CharField(max_length=50)\n    level = models.CharField(max_length=50, choices = LEVEL)\n    def __str__(self):\n        return self.username",
        "detail": "admKombustivel.models",
        "documentation": {}
    },
    {
        "label": "Transporte",
        "kind": 6,
        "importPath": "admKombustivel.models",
        "description": "admKombustivel.models",
        "peekOfCode": "class Transporte(models.Model):\n    KATEGORY = (\n        ('Kareta', 'Kareta'),\n        ('Motor', 'Motor'),\n        ('Forklif', 'Forklif'))\n    id_transporte = models.AutoField(primary_key=True, editable=False)\n    nu_matricula = models.CharField(max_length=10)\n    categoria = models.CharField(max_length=20, choices = KATEGORY)\n    tipo_transporte = models.CharField(max_length=100)\n    def __str__(self):",
        "detail": "admKombustivel.models",
        "documentation": {}
    },
    {
        "label": "Regional",
        "kind": 6,
        "importPath": "admKombustivel.models",
        "description": "admKombustivel.models",
        "peekOfCode": "class Regional(models.Model):     \n    id_regional = models.AutoField(primary_key=True, editable=False)\n    naran_regional = models.CharField(max_length=200)\n    def __str__(self):\n        return self. naran_regional\nclass Departamentu(models.Model):     \n    id_departamentu = models.AutoField(primary_key=True, editable=False)\n    naran_departamentu = models.CharField(max_length=200)\n    def __str__(self):\n        return self.naran_departamentu",
        "detail": "admKombustivel.models",
        "documentation": {}
    },
    {
        "label": "Departamentu",
        "kind": 6,
        "importPath": "admKombustivel.models",
        "description": "admKombustivel.models",
        "peekOfCode": "class Departamentu(models.Model):     \n    id_departamentu = models.AutoField(primary_key=True, editable=False)\n    naran_departamentu = models.CharField(max_length=200)\n    def __str__(self):\n        return self.naran_departamentu\n #Models Diresaun   \nclass Diresaun(models.Model):     \n    id_diresaun = models.AutoField(primary_key=True, editable=False)\n    naran_diresaun = models.CharField(max_length=200)\n    def __str__(self):",
        "detail": "admKombustivel.models",
        "documentation": {}
    },
    {
        "label": "Diresaun",
        "kind": 6,
        "importPath": "admKombustivel.models",
        "description": "admKombustivel.models",
        "peekOfCode": "class Diresaun(models.Model):     \n    id_diresaun = models.AutoField(primary_key=True, editable=False)\n    naran_diresaun = models.CharField(max_length=200)\n    def __str__(self):\n        return self.naran_diresaun\n#Models Motorista\nclass Motorista(models.Model):\n    SEXO = (\n        ('Feto', 'Feto'),\n        ('Mane', 'Mane'))",
        "detail": "admKombustivel.models",
        "documentation": {}
    },
    {
        "label": "Motorista",
        "kind": 6,
        "importPath": "admKombustivel.models",
        "description": "admKombustivel.models",
        "peekOfCode": "class Motorista(models.Model):\n    SEXO = (\n        ('Feto', 'Feto'),\n        ('Mane', 'Mane'))\n    id_motorista = models.AutoField(primary_key=True, editable=False)\n    naran_motorista = models.CharField(max_length=200)\n    sexo = models.CharField(max_length=20, choices = SEXO)\n    id_departamentu = models.ForeignKey(Departamentu, on_delete=models.CASCADE, null=False, blank=False)\n    id_diresaun = models.ForeignKey(Diresaun, on_delete=models.CASCADE, null=False, blank=False)\n    id_regional = models.ForeignKey(Regional, on_delete=models.CASCADE, null=False, blank=False)",
        "detail": "admKombustivel.models",
        "documentation": {}
    },
    {
        "label": "Tinan",
        "kind": 6,
        "importPath": "admKombustivel.models",
        "description": "admKombustivel.models",
        "peekOfCode": "class Tinan(models.Model):     \n    ano = models.IntegerField(primary_key=True)\n    def __str__(self):\n        return str(self.ano) \n #models distributor   \nclass Distribuitor(models.Model):     \n    id_distribuitor = models.AutoField(primary_key=True, editable=False)\n    naran_distribuitor = models.CharField(max_length=200)\n    montante_distribuitor = models.FloatField(default=0) \n    montante_atual = models.FloatField(default=0) ",
        "detail": "admKombustivel.models",
        "documentation": {}
    },
    {
        "label": "Distribuitor",
        "kind": 6,
        "importPath": "admKombustivel.models",
        "description": "admKombustivel.models",
        "peekOfCode": "class Distribuitor(models.Model):     \n    id_distribuitor = models.AutoField(primary_key=True, editable=False)\n    naran_distribuitor = models.CharField(max_length=200)\n    montante_distribuitor = models.FloatField(default=0) \n    montante_atual = models.FloatField(default=0) \n    data = models.DateField(default=date.today)\n    ano = models.ForeignKey(Tinan, on_delete=models.CASCADE, null=False, blank=False)\n    def __str__(self):\n        return self.naran_distribuitor\nclass Fulan(models.Model):     ",
        "detail": "admKombustivel.models",
        "documentation": {}
    },
    {
        "label": "Fulan",
        "kind": 6,
        "importPath": "admKombustivel.models",
        "description": "admKombustivel.models",
        "peekOfCode": "class Fulan(models.Model):     \n    id_fulan = models.AutoField(primary_key=True, editable=False)\n    naran_fulan = models.CharField(max_length=20)\n    def __str__(self):\n        return self.naran_fulan\nclass Senhas(models.Model):\n    STATUS = (\n        ('Seidauk Distribui', 'Seidauk Distribui'),\n        ('Distribui Ona', 'Distribui Ona'))\n    id_senhas = models.AutoField(primary_key=True, editable=False)",
        "detail": "admKombustivel.models",
        "documentation": {}
    },
    {
        "label": "Senhas",
        "kind": 6,
        "importPath": "admKombustivel.models",
        "description": "admKombustivel.models",
        "peekOfCode": "class Senhas(models.Model):\n    STATUS = (\n        ('Seidauk Distribui', 'Seidauk Distribui'),\n        ('Distribui Ona', 'Distribui Ona'))\n    id_senhas = models.AutoField(primary_key=True, editable=False)\n    id_distributor = models.ForeignKey(Distribuitor, on_delete=models.CASCADE, null=False, blank=False)\n    nu_senhas = models.CharField(max_length=200)\n    folin_senhas = models.FloatField(default=0)\n    status = models.CharField(max_length=20 ,choices = STATUS, default='Seidauk Distribui')\n    def __int__(self):",
        "detail": "admKombustivel.models",
        "documentation": {}
    },
    {
        "label": "Distribuisaun",
        "kind": 6,
        "importPath": "admKombustivel.models",
        "description": "admKombustivel.models",
        "peekOfCode": "class Distribuisaun(models.Model):\n    KATEGORY = (\n        ('Gazolina', 'Gazolina'),\n        ('Gazoel', 'Gazoel'))   \n    id_distribuisaun = models.AutoField(primary_key=True, editable=False)\n    tipo_kombustivel = models.CharField(max_length=20, choices = KATEGORY)\n    kilometrajen = models.CharField(max_length=200, default=0)   \n    id_transporte = models.ForeignKey(Transporte, on_delete=models.CASCADE ,null=False, blank=False)\n    id_senhas = models.ForeignKey(Senhas, on_delete=models.CASCADE, null=False, blank=False)\n    id_motorista = models.ForeignKey(Motorista, on_delete=models.CASCADE, null=False, blank=False)",
        "detail": "admKombustivel.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "admKombustivel.urls",
        "description": "admKombustivel.urls",
        "peekOfCode": "urlpatterns = [\n     path('login/', views.loginPage, name='login'),\n     path('logout/', views.logoutUser, name='logout'),\n     path('', views.home, name='home'),\n     path('dash_kombustivel/', views.dash_kombustivel, name='dash_kombustivel'),\n     path('dadus_distributor/', views.dadus_distributor, name='dadus_distributor'),\n     path('aumenta_distributor/', views.aumenta_distributor, name='aumenta_distributor'),\n     path('delete_dadus_distributor/<str:pk>/', views.delete_dadus_distributor, name='delete_dadus_distributor'),\n     path('update_dadus_distributor/<str:pk>/', views.updateDistributor, name='updateDistributor'),\n     path('distribui_kom/', views.distribui_kom, name='distribui_kom'),",
        "detail": "admKombustivel.urls",
        "documentation": {}
    },
    {
        "label": "loginPage",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def loginPage(request):\n    if request.method == 'POST':\n        username = request.POST.get('username')\n        password= request.POST.get('password')\n        user = authenticate(request, username=username, password=password)\n        if user is not None:\n            login(request, user)\n            return redirect('home')\n        else:\n            messages.info(request, 'Username ou Password la loos')",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "logoutUser",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def logoutUser(request):\n    logout(request)\n    return redirect('login')\n@login_required(login_url='login')\ndef user_profile(request):\n    utilizador = User.objects.get(username=request.user.username)\n    form = UserProfileForm(instance=utilizador)\n    if request.method == 'POST':\n        # print('Printing Post', request.POST) print result form iha terminal\n        form = UserProfileForm(request.POST, instance=utilizador)",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "user_profile",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def user_profile(request):\n    utilizador = User.objects.get(username=request.user.username)\n    form = UserProfileForm(instance=utilizador)\n    if request.method == 'POST':\n        # print('Printing Post', request.POST) print result form iha terminal\n        form = UserProfileForm(request.POST, instance=utilizador)\n        if form.is_valid():\n            form.save()\n            return redirect('update_user')\n    context = {'form': form}",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "hom",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def home (request):\n    return render(request, 'templateKombustivel/home.html')\n@login_required(login_url='login')\ndef dash_kombustivel (request):\n    #Get total stock in\n    stockIn = Distribuitor.objects.all()\n    total_dist = Distribuitor.objects.values_list('montante_distribuitor') \n    total_stock_in = 0\n    for dist_tuple in total_dist:\n        total_stock_in += dist_tuple[0]",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "dash_kombustive",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def dash_kombustivel (request):\n    #Get total stock in\n    stockIn = Distribuitor.objects.all()\n    total_dist = Distribuitor.objects.values_list('montante_distribuitor') \n    total_stock_in = 0\n    for dist_tuple in total_dist:\n        total_stock_in += dist_tuple[0]\n    #Get total stock out  \n    dadus_distribuisaun = Distribuisaun.objects.all()\n    total_dist = Distribuisaun.objects.values_list('id_senhas__folin_senhas') ",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "stockYea",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def stockYear (request):\n    # Fetch the data\n    distribuisaun_query = (\n        Distribuisaun.objects.filter(data__year__gte=2024)\n        .annotate(year=ExtractYear('data'))\n        .values('year')\n        .annotate(total_folin_senhas=Sum('id_senhas__folin_senhas'))\n        .order_by('year')\n    )\n    # Prepare the data for JSON response",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "stockMonth",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def stockMonth(request):\n    # Fetch the data for the year 2024\n    distribuisaun_query = (\n        Distribuisaun.objects.filter(data__year=2024)  # Filter for the year 2024\n        .annotate(month=ExtractMonth('data'))  # Extract the month\n        .values('month')  # Group by month\n        .annotate(total_folin_senhas=Sum('id_senhas__folin_senhas'))  # Sum `folin_senhas` for each month\n        .order_by('month')  # Order by month\n    )\n    data = list(distribuisaun_query)",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "total_transportes",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def total_transportes(request):\n    # Aggregate count of transport types\n    total_transportes = Transporte.objects.values('categoria')\\\n        .annotate(total=Count('categoria'))\\\n        .order_by('categoria')\n    # Convert the queryset to a list of dictionaries\n    data = list(total_transportes)\n    # Return as a JSON response\n    return JsonResponse(data, safe=False)\n#views Distribuitor ",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "dadus_distributo",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def dadus_distributor (request):\n    dadus_distributor = Distribuitor.objects.all()\n    total_dist = Distribuitor.objects.values_list('montante_atual') \n    total = 0\n    for dist_tuple in total_dist:\n        total += dist_tuple[0]\n    paginator = Paginator(dadus_distributor, 5)\n    page_number = request.GET.get(\"page\")\n    page_obj = paginator.get_page(page_number)\n    context = {'kombustivels': dadus_distributor, 'page_obj': page_obj, 'total_montante': total}",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "aumenta_distributo",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def aumenta_distributor (request):\n    form = DistributorForm\n    if request.method == 'POST':\n        form = DistributorForm(request.POST)\n        if form.is_valid():\n           form.save()\n           return redirect('dadus_distributor')\n    context = {'form': form}\n    return render(request, 'templateKombustivel/distributor/aumenta_distributor.html', context)\n@login_required(login_url='login')",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "delete_dadus_distributo",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def delete_dadus_distributor (request, pk):\n    distributor = Distribuitor.objects.get(id_distribuitor=pk)\n    if request.method == 'GET':\n        distributor.delete()\n        return redirect('dadus_distributor')\n@login_required(login_url='login')\n@manejarial_only\ndef updateDistributor (request, pk):\n    distributor = Distribuitor.objects.get(id_distribuitor=pk)\n    form = DistributorForm(instance=distributor)",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "updateDistributo",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def updateDistributor (request, pk):\n    distributor = Distribuitor.objects.get(id_distribuitor=pk)\n    form = DistributorForm(instance=distributor)\n    if request.method == 'POST':\n        # print('Printing Post', request.POST) print result form iha terminal\n        form = DistributorForm(request.POST, instance=distributor)\n        if form.is_valid():\n            form.save()\n            return redirect('dadus_distributor')\n    context = {'form': form}",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "distribui_ko",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def distribui_kom (request):\n    dadus_distribuisaun = Distribuisaun.objects.all()\n    total_dist = Distribuisaun.objects.values_list('id_senhas__folin_senhas') \n    total = 0\n    for dist_tuple in total_dist:\n        total += dist_tuple[0]\n    paginator = Paginator(dadus_distribuisaun,5)\n    page_number = request.GET.get(\"page\")\n    page_obj = paginator.get_page(page_number)\n    context = {'kombustivels': dadus_distribuisaun, 'page_obj': page_obj, 'total_montante': total}",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "aumenta_dadus_distribuisau",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def aumenta_dadus_distribuisaun (request):\n    form = DistribuisaunForm\n    if request.method == 'POST':\n        form = DistribuisaunForm(request.POST)\n        if form.is_valid():\n           form.save()\n           sweetify.toast(request, 'Successfully Added.')\n           return redirect('distribui_kom')\n    context = {'form': form}\n    return render(request, 'templateKombustivel/kombustivel/aumenta_dadus_distribuisaun.html', context)",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "delete_dadus_distribuisau",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def delete_dadus_distribuisaun (request, pk):\n    distribuisaun = Distribuisaun.objects.get(id_distribuisaun=pk)\n    senhas = Senhas.objects.get(id_senhas=distribuisaun.id_senhas)\n    if request.method == 'GET':\n         # Update the related Senhas status to \"non-distributed\"\n        senhas_instance = senhas \n        senhas_instance.status = 'Seidauk Distribui'\n        senhas_instance.save()\n        distribuisaun.delete()\n        return redirect('distribui_kom')",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "updateDistribuisau",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def updateDistribuisaun (request, pk):\n    distribuisaun = Distribuisaun.objects.get(id_distribuisaun=pk)\n    form = DistribuisaunForm(instance=distribuisaun)\n    if request.method == 'POST':\n        # print('Printing Post', request.POST) print result form iha terminal\n        form = DistribuisaunForm(request.POST, instance=distribuisaun)\n        if form.is_valid():\n            form.save()\n            return redirect('distribui_kom')\n    context = {'form': form}",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "senha",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def senhas (request):\n    dadus_senhas = Senhas.objects.all()\n    total_dist = Senhas.objects.values_list('folin_senhas') \n    total = 0\n    for dist_tuple in total_dist:\n        total += dist_tuple[0]\n    paginator = Paginator(dadus_senhas, 5)\n    page_number = request.GET.get(\"page\")\n    page_obj = paginator.get_page(page_number)\n    context = {'kombustivels': dadus_senhas, 'page_obj': page_obj, 'total_montante': total}",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "aumenta_dadus_senha",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def aumenta_dadus_senhas (request):\n    form = SenhasForm\n    if request.method == 'POST':\n        form = SenhasForm(request.POST)\n        if form.is_valid():\n           form.save()\n           return redirect('dadus_senhas')\n    context = {'form': form}\n    return render(request, 'templateKombustivel/senhas/aumenta_dadus_senhas.html', context)\n@login_required(login_url='login')",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "delete_dadus_senha",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def delete_dadus_senhas (request, pk):\n    senhas = Senhas.objects.get(id_senhas=pk)\n    if request.method == 'GET':\n        senhas.delete()\n        return redirect('dadus_senhas')\n@login_required(login_url='login')  \n@manejarial_only\ndef updateSenhas (request, pk):\n    senhas = Senhas.objects.get(id_senhas=pk)\n    form = SenhasForm(instance=senhas)",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "updateSenha",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def updateSenhas (request, pk):\n    senhas = Senhas.objects.get(id_senhas=pk)\n    form = SenhasForm(instance=senhas)\n    if request.method == 'POST':\n        # print('Printing Post', request.POST) print result form iha terminal\n        form = SenhasForm(request.POST, instance=senhas)\n        if form.is_valid():\n            form.save()\n            return redirect('dadus_senhas')\n    context = {'form': form}",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "dadus_regiona",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def dadus_regional (request):\n    dadus_regional = Regional.objects.all()\n    context = {'kombustivels': dadus_regional}\n    return render(request, 'templateKombustivel/regional/dadus_regional.html', context)\n@login_required(login_url='login')\n@manejarial_only\ndef aumenta_dadus_regional (request):\n    form = RegionalForm\n    if request.method == 'POST':\n        form = RegionalForm(request.POST)",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "aumenta_dadus_regiona",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def aumenta_dadus_regional (request):\n    form = RegionalForm\n    if request.method == 'POST':\n        form = RegionalForm(request.POST)\n        if form.is_valid():\n           form.save()\n           sweetify.success(request, 'Successfully Added.')\n           return redirect('dadus_regional')\n    context = {'form': form}\n    return render(request, 'templateKombustivel/regional/aumenta_dadus_regional.html', context)",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "delete_dadus_regiona",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def delete_dadus_regional (request, pk):\n    regional = Regional.objects.get(id_regional=pk)\n    if request.method == 'GET':\n        regional.delete()\n        return redirect('dadus_regional')\n@login_required(login_url='login')\n@manejarial_only\ndef updateRegional (request, pk):\n    regional = Regional.objects.get(id_regional=pk)\n    form = RegionalForm(instance=regional)",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "updateRegiona",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def updateRegional (request, pk):\n    regional = Regional.objects.get(id_regional=pk)\n    form = RegionalForm(instance=regional)\n    if request.method == 'POST':\n        # print('Printing Post', request.POST) print result form iha terminal\n        form = RegionalForm(request.POST, instance=regional)\n        if form.is_valid():\n            form.save()\n            sweetify.toast(request, 'Successfully Added.')\n            return redirect('dadus_regional')",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "dadus_departament",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def dadus_departamentu (request):\n    dadus_departamentu = Departamentu.objects.all()\n    context = {'kombustivels': dadus_departamentu}\n    return render(request, 'templateKombustivel/departamentu/dadus_departamentu.html', context)\n@login_required(login_url='login')\n@manejarial_only\ndef aumenta_dadus_departamentu (request):\n    form = DepartamentuForm\n    if request.method == 'POST':\n        form = DepartamentuForm(request.POST)",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "aumenta_dadus_departament",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def aumenta_dadus_departamentu (request):\n    form = DepartamentuForm\n    if request.method == 'POST':\n        form = DepartamentuForm(request.POST)\n        if form.is_valid():\n           form.save()\n           return redirect('dadus_departamentu')\n    context = {'form': form}\n    return render(request, 'templateKombustivel/departamentu/aumenta_dadus_departamentu.html', context)\n@login_required(login_url='login')",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "delete_dadus_departament",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def delete_dadus_departamentu (request, pk):\n    departamentu = Departamentu.objects.get(id_departamentu=pk)\n    if request.method == 'GET':\n        departamentu.delete()\n        return redirect('dadus_departamentu')\n@login_required(login_url='login')\n@manejarial_only\ndef updateDepartamentu (request, pk):\n    departamentu = Departamentu.objects.get(id_departamentu=pk)\n    form = DepartamentuForm(instance=departamentu)",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "updateDepartament",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def updateDepartamentu (request, pk):\n    departamentu = Departamentu.objects.get(id_departamentu=pk)\n    form = DepartamentuForm(instance=departamentu)\n    if request.method == 'POST':\n        # print('Printing Post', request.POST) print result form iha terminal\n        form = DepartamentuForm(request.POST, instance=departamentu)\n        if form.is_valid():\n            form.save()\n            return redirect('dadus_departamentu')\n    context = {'form': form}",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "dadus_diresau",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def dadus_diresaun (request):\n    dadus_diresaun = Diresaun.objects.all()\n    context = {'kombustivels': dadus_diresaun}\n    return render(request, 'templateKombustivel/diresaun/dadus_diresaun.html', context)\n@login_required(login_url='login')\n@manejarial_only\ndef aumenta_dadus_diresaun (request):\n    form = DiresaunForm\n    if request.method == 'POST':\n        form = DiresaunForm(request.POST)",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "aumenta_dadus_diresau",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def aumenta_dadus_diresaun (request):\n    form = DiresaunForm\n    if request.method == 'POST':\n        form = DiresaunForm(request.POST)\n        if form.is_valid():\n           form.save()\n           return redirect('dadus_diresaun')\n    context = {'form': form}\n    return render(request, 'templateKombustivel/diresaun/aumenta_dadus_diresaun.html', context)\n@login_required(login_url='login')",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "delete_dadus_diresau",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def delete_dadus_diresaun (request, pk):\n    diresaun = Diresaun.objects.get(id_diresaun=pk)\n    if request.method == 'GET':\n        diresaun.delete()\n        return redirect('dadus_diresaun')\n@login_required(login_url='login')    \n@manejarial_only\ndef updateDiresaun (request, pk):\n    diresaun = Diresaun.objects.get(id_diresaun=pk)\n    form = DiresaunForm(instance=diresaun)",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "updateDiresau",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def updateDiresaun (request, pk):\n    diresaun = Diresaun.objects.get(id_diresaun=pk)\n    form = DiresaunForm(instance=diresaun)\n    if request.method == 'POST':\n        # print('Printing Post', request.POST) print result form iha terminal\n        form = DiresaunForm(request.POST, instance=diresaun)\n        if form.is_valid():\n            form.save()\n            return redirect('dadus_diresaun')\n    context = {'form': form}",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "dadus_tran",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def dadus_trans (request):\n    dadus_transporte = Transporte.objects.all()\n    context = {'transporte': dadus_transporte}\n    return render(request, 'templateKombustivel/transporte/dadus_trans.html', context)\n@login_required(login_url='login')\n@manejarial_only\ndef aumenta_dadus_trans (request):\n    form = TransporteForm\n    if request.method == 'POST':\n        form = TransporteForm(request.POST)",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "aumenta_dadus_tran",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def aumenta_dadus_trans (request):\n    form = TransporteForm\n    if request.method == 'POST':\n        form = TransporteForm(request.POST)\n        if form.is_valid():\n           form.save()\n           return redirect('dadus_trans')\n    context = {'form': form}\n    return render(request, 'templateKombustivel/transporte/aumenta_dadus_trans.html', context)\n@login_required(login_url='login')",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "delete_dadus_transport",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def delete_dadus_transporte (request, pk):\n    transporte = Transporte.objects.get(id_transporte=pk)\n    if request.method == 'GET':\n        transporte.delete()\n        return redirect('dadus_trans')\n@login_required(login_url='login')\n@manejarial_only\ndef updateTransporte (request, pk):\n    transporte = Transporte.objects.get(id_transporte=pk)\n    form = TransporteForm(instance=transporte)",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "updateTransport",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def updateTransporte (request, pk):\n    transporte = Transporte.objects.get(id_transporte=pk)\n    form = TransporteForm(instance=transporte)\n    if request.method == 'POST':\n        # print('Printing Post', request.POST) print result form iha terminal\n        form = TransporteForm(request.POST, instance=transporte)\n        if form.is_valid():\n            form.save()\n            return redirect('dadus_trans')\n    context = {'form': form}",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "dadus_motorist",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def dadus_motorista (request):\n    dadus_motorista = Motorista.objects.all()\n    context = {'motorista': dadus_motorista}\n    return render(request, 'templateKombustivel/motorista/dadus_motorista.html', context)\n@login_required(login_url='login')\n@manejarial_only\ndef aumenta_dadus_motorista (request):\n    form = MotoristaForm\n    if request.method == 'POST':\n        form = MotoristaForm(request.POST)",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "aumenta_dadus_motorist",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def aumenta_dadus_motorista (request):\n    form = MotoristaForm\n    if request.method == 'POST':\n        form = MotoristaForm(request.POST)\n        if form.is_valid():\n           form.save()\n           return redirect('dadus_motorista')\n    context = {'form': form}\n    return render(request, 'templateKombustivel/motorista/aumenta_dadus_motorista.html', context)\n@login_required(login_url='login')",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "delete_dadus_motorist",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def delete_dadus_motorista (request, pk):\n    motorista = Motorista.objects.get(id_motorista=pk)\n    if request.method == 'GET':\n        motorista.delete()\n        return redirect('dadus_moto')\n@login_required(login_url='login')\n@manejarial_only\ndef updateMotorista (request, pk):\n    motorista = Motorista.objects.get(id_motorista=pk)\n    form = MotoristaForm(instance=motorista)",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "updateMotorist",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def updateMotorista (request, pk):\n    motorista = Motorista.objects.get(id_motorista=pk)\n    form = MotoristaForm(instance=motorista)\n    if request.method == 'POST':\n        # print('Printing Post', request.POST) print result form iha terminal\n        form = MotoristaForm(request.POST, instance=motorista)\n        if form.is_valid():\n            form.save()\n            return redirect('dadus_motorista')\n    context = {'form': form}",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "stockIn",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def stockIn(request):\n    # Initialize variables\n    stockIn = Distribuitor.objects.all()\n    total_dist = Distribuitor.objects.values_list('montante_distribuitor', flat=True) \n    total = sum(total_dist)\n    # Handle filtering\n    start_date = request.GET.get('start_date')\n    end_date = request.GET.get('end_date')\n    if start_date and end_date:\n        stockIn = stockIn.filter(Q(data__gte=start_date) & Q(data__lte=end_date))",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "stockOut",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def stockOut(request):\n        stockOut = Distribuisaun.objects.all()\n        total_dist = Distribuisaun.objects.values_list('id_senhas__folin_senhas') \n        total = 0\n        for dist_tuple in total_dist:\n            total += dist_tuple[0]\n         # Handle filtering\n        start_date = request.GET.get('start_date')\n        end_date = request.GET.get('end_date')\n        if start_date and end_date:",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "stockAtua",
        "kind": 2,
        "importPath": "admKombustivel.views",
        "description": "admKombustivel.views",
        "peekOfCode": "def stockAtual (request):\n    stock_atual = Distribuisaun.objects.count()\n    total_dist = Distribuisaun.objects.values_list('id_senhas__folin_senhas') \n    total = 0\n    for dist_tuple in total_dist:\n        total += dist_tuple[0]\n    context = {'kombustivels': stock_atual,'total_montante': total}\n    return render(request, 'templateKombustivel/dash_kombustivel.html', context)",
        "detail": "admKombustivel.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "sis_infpm.asgi",
        "description": "sis_infpm.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "sis_infpm.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "sis_infpm.settings",
        "description": "sis_infpm.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-ehuojgw9&olpbp@3!03t4w562x5%y$s2c_jla_!f3$%j6iy86v'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "sis_infpm.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "sis_infpm.settings",
        "description": "sis_infpm.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-ehuojgw9&olpbp@3!03t4w562x5%y$s2c_jla_!f3$%j6iy86v'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'crispy_forms',\n    'crispy_bootstrap5',\n    'django.contrib.admin',\n    'django.contrib.auth',",
        "detail": "sis_infpm.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "sis_infpm.settings",
        "description": "sis_infpm.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'crispy_forms',\n    'crispy_bootstrap5',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "sis_infpm.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "sis_infpm.settings",
        "description": "sis_infpm.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'crispy_forms',\n    'crispy_bootstrap5',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "sis_infpm.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "sis_infpm.settings",
        "description": "sis_infpm.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'crispy_forms',\n    'crispy_bootstrap5',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    # 'admLojistik',",
        "detail": "sis_infpm.settings",
        "documentation": {}
    },
    {
        "label": "CRISPY_ALLOWED_TEMPLATE_PACKS",
        "kind": 5,
        "importPath": "sis_infpm.settings",
        "description": "sis_infpm.settings",
        "peekOfCode": "CRISPY_ALLOWED_TEMPLATE_PACKS = \"bootstrap5\"\nCRISPY_TEMPLATE_PACK = \"bootstrap5\"\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',",
        "detail": "sis_infpm.settings",
        "documentation": {}
    },
    {
        "label": "CRISPY_TEMPLATE_PACK",
        "kind": 5,
        "importPath": "sis_infpm.settings",
        "description": "sis_infpm.settings",
        "peekOfCode": "CRISPY_TEMPLATE_PACK = \"bootstrap5\"\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]",
        "detail": "sis_infpm.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "sis_infpm.settings",
        "description": "sis_infpm.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'sis_infpm.urls'",
        "detail": "sis_infpm.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "sis_infpm.settings",
        "description": "sis_infpm.settings",
        "peekOfCode": "ROOT_URLCONF = 'sis_infpm.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "sis_infpm.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "sis_infpm.settings",
        "description": "sis_infpm.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "sis_infpm.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "sis_infpm.settings",
        "description": "sis_infpm.settings",
        "peekOfCode": "WSGI_APPLICATION = 'sis_infpm.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\n# DATABASES = {\n#     'default': {\n#         'ENGINE': 'django.db.backends.mysql',\n#         'NAME': BASE_DIR / 'db.sqlite3',\n#     }\n# }\nDATABASES = {",
        "detail": "sis_infpm.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "sis_infpm.settings",
        "description": "sis_infpm.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        'NAME': 'db_lp',\n        'USER': 'root',\n        'PASSWORD': '',\n        'HOST': '127.0.0.1',\n        'PORT': '3306',\n    }\n}",
        "detail": "sis_infpm.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "sis_infpm.settings",
        "description": "sis_infpm.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "sis_infpm.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "sis_infpm.settings",
        "description": "sis_infpm.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nMEDIA_ROOT = BASE_DIR / 'media'\nMEDIA_URL = '/media/'\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [",
        "detail": "sis_infpm.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "sis_infpm.settings",
        "description": "sis_infpm.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nMEDIA_ROOT = BASE_DIR / 'media'\nMEDIA_URL = '/media/'\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / 'static'",
        "detail": "sis_infpm.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "sis_infpm.settings",
        "description": "sis_infpm.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nMEDIA_ROOT = BASE_DIR / 'media'\nMEDIA_URL = '/media/'\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / 'static'\n]",
        "detail": "sis_infpm.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "sis_infpm.settings",
        "description": "sis_infpm.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nMEDIA_ROOT = BASE_DIR / 'media'\nMEDIA_URL = '/media/'\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / 'static'\n]\n# Default primary key field type",
        "detail": "sis_infpm.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "sis_infpm.settings",
        "description": "sis_infpm.settings",
        "peekOfCode": "MEDIA_ROOT = BASE_DIR / 'media'\nMEDIA_URL = '/media/'\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / 'static'\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "sis_infpm.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "sis_infpm.settings",
        "description": "sis_infpm.settings",
        "peekOfCode": "MEDIA_URL = '/media/'\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / 'static'\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "sis_infpm.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "sis_infpm.settings",
        "description": "sis_infpm.settings",
        "peekOfCode": "STATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / 'static'\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "sis_infpm.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "sis_infpm.settings",
        "description": "sis_infpm.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    BASE_DIR / 'static'\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "sis_infpm.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "sis_infpm.settings",
        "description": "sis_infpm.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "sis_infpm.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "sis_infpm.urls",
        "description": "sis_infpm.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include(\"admKombustivel.urls\")),\n]",
        "detail": "sis_infpm.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "sis_infpm.wsgi",
        "description": "sis_infpm.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "sis_infpm.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'sis_infpm.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]